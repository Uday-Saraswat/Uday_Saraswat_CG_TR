Day 2

.i have creted a new repo in my local directory and learn about branch 
.Create , Work on a delete branch
.Head Pointers
.Detached Head
.merge (Fast Forward Way , 3-Ways, Handle Conflicts
.Git stash 
.git rebase \ Dont ue rebase one the shared feature branches only do on that branch on which only you are working.
.Git Merge VS Git Rebases
-->git merge :- 
   (i) Is non Destructive operation
   (ii) Existing brranches are not changed in any way.
   (iii) Creates a new merge commit in the feature branch

-->git rebase
   (i) Moves the entire feature branch to begin on the tip of the master branch
   (ii) Rewrites the project hitory
   (iii) We get much Cleaner and linear project hitory.

.Forks and PULL Request.

.Commands that I have learnt today and  run succesfully are :

1. vi <file name> \\ Edit file in editor.
2. cp <file name> <new file name> \\Copy old file to new file. 
3. git log \\ To check all th commits.
4. git log --all --decorate --oneline --graph \\ to see proper representation of branches.
5. alish <name> = " " \\ to create variable alish
6. git branch <name> \\ Create a new branch.
7. git branch \\ to check all the branch and present branch.
8. git checkout <branch_name> \\ to change from one branch to another branch (HEAD move).
9. cat <file_name>
10.git commit -a -m"comment" \\ directly stage and commit.
11.git diff <branch_name>..<branch_name> \\ to check diference bw branches.
12.git branch --merged \\to check merged branch.
13.git branch -d <branch_name> \\ delete the branch.after merge.
14.git checkout -b <new_branch> \\ to create and switch to new branch directly.
15.git diff \\\see changes.
16.git checkout <commit_id> \\ attach HEAD to that branch.
17.git stash \\ it is used when we have unfinished work that is not committed.once we run git stash out working tree and staging area are clean.
18.git rebase master 


.Visual StudioCode || HOW to use Git and GitHub?
.How to add github project to eclipse?

